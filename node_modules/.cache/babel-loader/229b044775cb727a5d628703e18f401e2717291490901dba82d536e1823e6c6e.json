{"ast":null,"code":"// Auth.js\nimport { auth } from './Firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendEmailVerification } from \"firebase/auth\";\n\n// Function for signing up and sending a verification email\nexport const signup = async (email, password) => {\n  try {\n    // Check if the email is from the 'drexel.edu' domain\n    if (!email.endsWith('@drexel.edu')) {\n      alert('Only Drexel University email addresses are allowed.');\n      return;\n    }\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    await sendEmailVerification(user); // Send verification email\n    alert('Signup successful! Please verify your email before logging in. Check The Junk Folder in Oultook ');\n  } catch (error) {\n    console.error(\"Signup error:\", error.message);\n    alert(error.message);\n  }\n};\n\n// Function for signing in\nexport const signin = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    if (user.emailVerified) {\n      alert(\"Signin successful!\");\n    } else {\n      alert(\"Please verify your email before signing in.\");\n    }\n  } catch (error) {\n    console.error(\"Signin error:\", error.message);\n    alert(error.message);\n  }\n};\n\n// Function for logging out\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n    alert(\"Logged out successfully!\");\n  } catch (error) {\n    console.error(\"Logout error:\", error.message);\n    alert(error.message);\n  }\n};","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendEmailVerification","signup","email","password","endsWith","alert","userCredential","user","error","console","message","signin","emailVerified","logout"],"sources":["/Users/namanbajpai/student-webapp/app/src/Auth.js"],"sourcesContent":["// Auth.js\nimport { auth } from './Firebase';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  sendEmailVerification \n} from \"firebase/auth\";\n\n// Function for signing up and sending a verification email\nexport const signup = async (email, password) => {\n  try {\n    // Check if the email is from the 'drexel.edu' domain\n    if (!email.endsWith('@drexel.edu')) {\n      alert('Only Drexel University email addresses are allowed.');\n      return;\n    }\n\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    await sendEmailVerification(user);  // Send verification email\n    alert('Signup successful! Please verify your email before logging in. Check The Junk Folder in Oultook ');\n  } catch (error) {\n    console.error(\"Signup error:\", error.message);\n    alert(error.message);\n  }\n};\n\n// Function for signing in\nexport const signin = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    if (user.emailVerified) {\n      alert(\"Signin successful!\");\n    } else {\n      alert(\"Please verify your email before signing in.\");\n    }\n  } catch (error) {\n    console.error(\"Signin error:\", error.message);\n    alert(error.message);\n  }\n};\n\n// Function for logging out\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n    alert(\"Logged out successfully!\");\n  } catch (error) {\n    console.error(\"Logout error:\", error.message);\n    alert(error.message);\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,YAAY;AACjC,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,qBAAqB,QAChB,eAAe;;AAEtB;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF;IACA,IAAI,CAACD,KAAK,CAACE,QAAQ,CAAC,aAAa,CAAC,EAAE;MAClCC,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IAEA,MAAMC,cAAc,GAAG,MAAMT,8BAA8B,CAACD,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;IAClF,MAAMI,IAAI,GAAGD,cAAc,CAACC,IAAI;IAChC,MAAMP,qBAAqB,CAACO,IAAI,CAAC,CAAC,CAAE;IACpCF,KAAK,CAAC,kGAAkG,CAAC;EAC3G,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7CL,KAAK,CAACG,KAAK,CAACE,OAAO,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMG,cAAc,GAAG,MAAMR,0BAA0B,CAACF,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;IAC9E,MAAMI,IAAI,GAAGD,cAAc,CAACC,IAAI;IAChC,IAAIA,IAAI,CAACK,aAAa,EAAE;MACtBP,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC,MAAM;MACLA,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7CL,KAAK,CAACG,KAAK,CAACE,OAAO,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMd,OAAO,CAACH,IAAI,CAAC;IACnBS,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7CL,KAAK,CAACG,KAAK,CAACE,OAAO,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}